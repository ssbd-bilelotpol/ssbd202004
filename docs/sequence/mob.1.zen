Client
BuyTicketPage
TicketController
TicketEndpoint
AirplaneSchemaService
AirplaneSchemaFacade
TicketController
TicketEndpoint
TicketService
TicketFacade
Passenger
Ticket
ConnectionService
ConnectionFacade
Connection
@Starter(Client)

if(validData) {
  displaySuccess = BuyTicketPage.buyTicket(ticketDto) {
    successResponse = TicketController.buyTicket(ticketDto) {

      success = TicketEndpoint.buyTicket(ticketDto){
                      //RW, Read Committed
      while(1) {
        success = TicketService.buyTicket(ticketDto) {
          account = AccountService.findByLogin(login) {
            account = AccountFacade.findByLogin(login)
          }

          flight = FlightService.findById(id) {
            flight = FlightFacade.find(id)
          }
          takenSeats = FlightService.getTakenSeats(flight)

          ticket = Ticket."<<create>>"
          success = TicketFacade.create(ticket){
            success = Passenger."<<cascade persist>>"
          }

          success = ConnectionService.calculateConnectionProfit() {
            connection = ConnectionFacade.find(connectionId)
            tickets = TicketFacade.find(connectionId)
            calculate()
            Connection.setProfit(profit)
            success = ConnectionFacade.edit(connection)
          }
        }
      }
        }
    }
  }
}
else if(seatTaken) {
  displayError = BuyTicketPage.buyTicket(ticketDto) {
    errorSeatAlreadyTaken = TicketController.buyTicket(ticketDto) {
      error = TicketEndpoint.buyTicket(ticketDto){
                //RW, Read Committed
      while(1) {
        error = TicketService.buyTicket(ticketDto) {
          account = AccountService.findByLogin(login) {
            account = AccountFacade.findByLogin(login)
          }

          flight = FlightService.findById(id) {
            flight = FlightFacade.find(id)
          }
          takenSeats = FlightService.getTakenSeats(flight)
        }
      }
      }
        }
    }
  }
else if(invalidData) {
  displayError = BuyTicketPage.buyTicket(ticketDto) {
    error = TicketController.buyTicket(ticketDto)
  }
}
