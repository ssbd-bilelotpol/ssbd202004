AirportEditPage
AirportController
AirportEndpoint
AirportService
AirportFacade

@Starter(Manager)

displayAirportForm = AirportEditPage.chooseAirport(id) {
    airportDto = AirportController.findById(id) {
        airportDto = AirportEndpoint.findById(id) {
            // RO, Read Committed
            while(1) {
                airport = AirportService.findById(id) {
                    airport = AirportFacade.find(id)
                }
            }
        }
    }
}
if(validData) {
    displaySuccess = AirportEditPage.update(id, airportDto) {
        success = AirportController.update(id, airportDto) {
            success = AirportEndpoint.update(id, airportDto) {
                // RW, Read Committed
                while(1) {
                    airport = AirportService.findById(id) {
                        airport = AirportFacade.find(id)
                    }
                    Airport.setData(airportDto)
                    success = AirportService.update(airport) {
                        success = AirportFacade.edit(airport)
                    }
                }
            }
        }
    }
} else if(invalidData) {
    displayError = AirportEditPage.update(id, airportDto) {
        error = AirportController.update(id, airportDto)
    }
}
else if(codeExists) {
    displayError = AirportEditPage.update(id, airportDto) {
        error = AirportController.update(id, airportDto) {
            error = AirportEndpoint.update(id, airportDto) {
                // RW, Read Committed
                while(1) {
                    airport = AirportService.findById(id) {
                        airport = AirportFacade.find(id)
                    }
                    Airport.setData(airportDto)
                    error = AirportService.update(airport) {
                        error = AirportFacade.edit(airport)
                    }
                }
            }
        }
    }
} else if(airportDeleted) {
    displayError= AirportEditPage.update(id, airportDto) {
        error = AirportController.update(id, airportDto) {
            error = AirportEndpoint.update(id, airportDto) {
                // RW, Read Committed
                while(1) {
                    airport = AirportService.findById(id) {
                        airport = AirportFacade.find(id)
                    }
                    Airport.setData(airportDto)
                    error = AirportService.update(airport) {
                        error = AirportFacade.edit(airport)
                    }
                }
            }
        }
    }
}