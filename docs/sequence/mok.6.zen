LoggedIn
AccountDetailsPage
AccountController
AccountEndpoint
AccountService
AccountFacade
@Starter(LoggedIn)

displayAccountData = AccountDetailsPage.retrieveOwnAccountDetails() {
  accountDto = AccountController.retrieveOwnAccountDetails() {
    accountDto = AccountEndpoint.retrieveOwnAccountDetails() {
    // RO, Read Committed
      while(1) {
        account = AccountService.findByLogin(login) {
          account = AccountFacade.findByLogin(login)
        }
      }
    }
  }

}

if (validData) {
  displaySuccess = AccountDetailsPage.enter() {
    successResponse = AccountController.changeOwnAccountPassword(accountPasswordDto){
        successResponse =  AccountEndpoint.changeOwnAccountPassword(accountPasswordDto) {
        // RW, Read Committed
        while(1) {
          account = AccountService.findByLogin(login) {
            account = AccountFacade.findByLogin(login)
          }

          success = AccountService.changePassword(account, password) {
            Account.setPassword(password)
            success = AccountFacade.edit(entity)
          }
        }
      }
    }

  }
} else if(invalidCurrentPassword)
  displayError = AccountDetailsPage.enter() {
    errorResponse =  AccountController.changeOwnAccountPassword(accountPasswordDto) {
      errorResponse =  AccountEndpoint.changeOwnAccountPassword(accountPasswordDto) {
        // RW, Read Committed
        while(1) {
          account = AccountService.findByLogin(login) {
            account = AccountFacade.findByLogin(login)
          }
        }
      }
    }
  }

}
else if(passwordIsTheSame)
  displayError = AccountDetailsPage.enter() {
    errorResponse =  AccountController.changeOwnAccountPassword(accountPasswordDto) {
      errorResponse =  AccountEndpoint.changeOwnAccountPassword(accountPasswordDto)
    }
  }

}
else if(accountNotFound)
  displayError = AccountDetailsPage.enter() {
    errorResponse =  AccountController.changeOwnAccountPassword(accountPasswordDto) {
      errorResponse =  AccountEndpoint.changeOwnAccountPassword(accountPasswordDto) {
        // RW, Read Committed
        while(1) {
          notFound = AccountService.findByLogin(login) {
            notFound = AccountFacade.findByLogin(login)
          }
        }
      }
    }

  }
} else if(passwordsDontMatch) {
  displayError = AccountDetailsPage.enter() {
    errorResponse = AccountController.changeOwnAccountPassword(accountPasswordDto)
  }  
}
