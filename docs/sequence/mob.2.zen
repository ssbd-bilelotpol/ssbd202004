CustomerServiceOrClient
TicketsPanelPage
TicketController
TicketEndpoint
TicketService
TicketFacade
Ticket
@Starter(CustomerServiceOrClient)
if(validData) {
  displaySuccess = TicketsPanelPage.returnTicket(ticketDto) {
    successResponse = TicketController.returnTicket(ticketDto) {
       successResponse = TicketEndpoint.returnTicket(ticketDto) {
        //RW, Read Committed
        while(1) {
            account = AccountService.getCurrentUser() {
              account = AccountFacade.findByLogin(login)
            }
            ticket = TicketService.findById(id) {
              ticket = TicketFacade.findById(ticketId)
            }

            success = TicketService.returnTicket(ticket) {
              success = ConnectionFacade.edit(connection)
              success = TicketFacade.remove(ticket)
            }
        }
      }
    }

  }
} else if(forbidden) {
  displayError = TicketsPanelPage.returnTicket(ticketDto) {
    forbiddenError = TicketController.returnTicket(ticketDto) {
       forbiddenError = TicketEndpoint.returnTicket(ticketDto) {
        //RW, Read Committed
        while(1) {
            account = AccountService.getCurrentUser() {
              account = AccountFacade.findByLogin(login)
            }
            ticket = TicketService.findById(id) {
              ticket = TicketFacade.findById(ticketId)
            }
        }
      }
    }

  }
} else if(timeToReturnExpired) {
  displayError = TicketsPanelPage.returnTicket(ticketDto) {
    timeToReturnExpiredError = TicketController.returnTicket(ticketDto) {
       timeToReturnExpiredError = TicketEndpoint.returnTicket(ticketDto) {
        //RW, Read Committed
        while(1) {
            account = AccountService.getCurrentUser() {
              account = AccountFacade.findByLogin(login)
            }
            ticket = TicketService.findById(id) {
              ticket = TicketFacade.findById(ticketId)
            }
        }
      }
    }

  }
}