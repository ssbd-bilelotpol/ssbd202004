FlightEditPage
FlightController
FlightEndpoint
FlightService
FlightFacade

@Starter(Manager)

displayFlightForm = FlightEditPage.chooseFlight(id) {
    flightDto = FlightController.findById(id) {
        flightDto = FlightEndpoint.findById(id) {
            // RO, Read Committed
            while(1) {
                flight = FlightService.findById(id) {
                    flight = FlightFacade.find(id)
                }
            }
        }
    }
}
if(validData) {
    displaySuccess = FlightEditPage.update(id, flightDto) {
        success = FlightController.update(id, flightDto) {
            success = FlightEndpoint.update(id, flightDto) {
                // RW, Read Committed
                while(1) {
                    flight = FlightService.findById(id) {
                        flight = FlightFacade.find(id)
                    }
                    Flight.setData(flightDto)
                    success = FlightService.update(flight) {
                        success = FlightFacade.edit(flight)
                    }
                }
            }
        }
    }
} else if(invalidData) {
    displayError = FlightEditPage.update(id, flightDto) {
        error = FlightController.update(id, flightDto)
    }
} else if(codeExists) {
    displayError = FlightEditPage.update(id, flightDto) {
        error = FlightController.update(id, flightDto) {
            error = FlightEndpoint.update(id, flightDto) {
                // RW, Read Committed
                while(1) {
                    flight = FlightService.findById(id) {
                        flight = FlightFacade.find(id)
                    }
                    Flight.setData(flightDto)
                    error = FlightService.update(flight) {
                        error = FlightFacade.edit(flight)
                    }
                }
            }
        }
    }
} else if(flightDeleted){
    displayError = FlightEditPage.update(id, flightDto) {
        error = FlightController.update(id, flightDto) {
            error = FlightEndpoint.update(id, flightDto) {
                // RW, Read Committed
                while(1) {
                    flight = FlightService.findById(id) {
                        flight = FlightFacade.find(id)
                    }
                    Flight.setData(flightDto)
                    error = FlightService.update(flight) {
                        error = FlightFacade.edit(flight)
                    }
                }
            }
        }
    }
}